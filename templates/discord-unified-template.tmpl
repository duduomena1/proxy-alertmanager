{{ define "__discord_proxy_alertmanager" }}Discord Proxy Alertmanager{{ end }}

{{ define "__discord_proxy_url" }}{{.ExternalURL}}/#/alerts?receiver={{.Receiver | urlquery}}{{ end }}

{{ define "__discord_proxy_subject" }}[{{.Status | toUpper}}{{if eq .Status "firing"}}:{{.Alerts.Firing | len}}{{if gt (.Alerts.Resolved | len) 0}}, RESOLVED:{{.Alerts.Resolved | len}}{{end}}{{end}}] {{.GroupLabels.SortedPairs.Values | join " "}} {{if gt (len .CommonLabels) (len .GroupLabels)}}({{with .CommonLabels.Remove .GroupLabels.Names}}{{.Values | join " "}}{{end}}){{end}}{{ end }}

{{ define "__discord_proxy_alert_context" }}{{range .}}
{{/* Determinar tipo de alerta baseado nos labels */}}
{{- $alertType := "system" -}}
{{- $deviceInfo := "" -}}
{{- $containerInfo := "" -}}
{{- $mountInfo := "" -}}
{{- $metricValue := 0.0 -}}

{{/* Extra√ß√£o inteligente de IP/Host de m√∫ltiplas fontes */}}
{{- $hostInfo := "unknown" -}}
{{- $realIP := "" -}}
{{- $prometheusSource := "unknown" -}}

{{/* 1. Tenta extrair de prometheus/datasource info primeiro */}}
{{- if .Labels.prometheus -}}
  {{- $prometheusSource = .Labels.prometheus -}}
{{- else if .Labels.prometheus_replica -}}
  {{- $prometheusSource = .Labels.prometheus_replica -}}
{{- else if .Labels.receive -}}
  {{- $prometheusSource = .Labels.receive -}}
{{- end -}}

{{/* 2. Busca o IP real em m√∫ltiplas fontes priorizadas */}}
{{- if .Labels.__address__ -}}
  {{/* __address__ tem o IP original antes do relabeling */}}
  {{- $hostInfo = .Labels.__address__ -}}
  {{- if match "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+:" .Labels.__address__ -}}
    {{- $realIP = reReplaceAll "^([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):.*" "$1" .Labels.__address__ -}}
  {{- end -}}
{{- else if and (.Labels.instance) (ne .Labels.instance "N/A") -}}
  {{- $hostInfo = .Labels.instance -}}
  {{/* Extrair IP se no formato IP:porta */}}
  {{- if match "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+:" .Labels.instance -}}
    {{- $realIP = reReplaceAll "^([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):.*" "$1" .Labels.instance -}}
  {{/* Se n√£o √© IP direto, mas tem porta, remove apenas a porta */}}
  {{- else if contains ":" .Labels.instance -}}
    {{- $hostInfo = reReplaceAll "^([^:]+):.*" "$1" .Labels.instance -}}
  {{- end -}}
{{- end -}}
{{/* Fallbacks para containers e outros casos */}}
{{- if eq $hostInfo "unknown" -}}
  {{- if .Labels.node_name -}}{{- $hostInfo = .Labels.node_name -}}
  {{- else if .Labels.kubernetes_node -}}{{- $hostInfo = .Labels.kubernetes_node -}}
  {{- else if .Labels.host -}}{{- $hostInfo = .Labels.host -}}
  {{- else if .Labels.server -}}{{- $hostInfo = .Labels.server -}}
  {{- else if .Labels.node -}}{{- $hostInfo = .Labels.node -}}
  {{- else if .Labels.hostname -}}{{- $hostInfo = .Labels.hostname -}}
  {{- else if .Labels.docker_host -}}{{- $hostInfo = .Labels.docker_host -}}
  {{- else if .Labels.container_host -}}{{- $hostInfo = .Labels.container_host -}}
  {{- else if .Labels.__address__ -}}{{- $hostInfo = .Labels.__address__ -}}
  {{- else if .Labels.target -}}{{- $hostInfo = .Labels.target -}}
  {{- end -}}
{{- end -}}

{{/* Detectar tipo de alerta pelos labels */}}
{{- if .Labels.device -}}
  {{- $alertType = "disk" -}}
  {{- $deviceInfo = .Labels.device -}}
  {{- $mountInfo = (.Labels.mountpoint | default "/") -}}
{{- else if (or (.Labels.container) (contains "container" (.Labels.job | lower)) (contains "docker" (.Labels.job | lower))) -}}
  {{- $alertType = "container" -}}
  {{- $containerInfo = (.Labels.container | default .Labels.job) -}}
{{- else if (contains "cpu" (.Labels.alertname | lower)) -}}
  {{- $alertType = "cpu" -}}
{{- else if (or (contains "memory" (.Labels.alertname | lower)) (contains "mem" (.Labels.alertname | lower))) -}}
  {{- $alertType = "memory" -}}
{{- end -}}

{{/* Extrair valor da m√©trica - m√∫ltiplas tentativas */}}
{{- if .Values -}}
  {{- range $k, $v := .Values -}}
    {{- if eq $k "A" -}}{{- $metricValue = $v -}}{{- end -}}
  {{- end -}}
  {{/* Se n√£o encontrou A, tenta outras chaves */}}
  {{- if eq $metricValue 0.0 -}}
    {{- range $k, $v := .Values -}}
      {{- if or (eq $k "B") (eq $k "C") (eq $k "D") -}}{{- $metricValue = $v -}}{{- break -}}{{- end -}}
    {{- end -}}
  {{- end -}}
  {{/* Se ainda zero, pega o primeiro valor n√£o-zero */}}
  {{- if eq $metricValue 0.0 -}}
    {{- range $k, $v := .Values -}}
      {{- if gt $v 0.0 -}}{{- $metricValue = $v -}}{{- break -}}{{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
{{/* Fallback MELHORADO: extrair do ValueString quando Values √© null */}}
{{- if and (eq $metricValue 0.0) (.ValueString) -}}
  {{/* Procura especificamente por "value=n√∫mero" que √© o padr√£o do Grafana */}}
  {{- if match "value=[0-9]+\\.?[0-9]*" .ValueString -}}
    {{- $extracted := reReplaceAll ".*value=([0-9]+\\.?[0-9]*).*" "$1" .ValueString -}}
    {{- $metricValue = float64 $extracted -}}
  {{/* Fallback secund√°rio: primeiro n√∫mero encontrado */}}
  {{- else if match "[0-9]+\\.?[0-9]*" .ValueString -}}
    {{- $extracted := reReplaceAll ".*?([0-9]+\\.?[0-9]*).*" "$1" .ValueString -}}
    {{- $metricValue = float64 $extracted -}}
  {{- end -}}
{{- end -}}

alertname: {{if eq $alertType "disk"}}Disk Alert - {{ if ne $realIP "" }}{{ $realIP }}{{ else }}{{ $hostInfo }}{{ end }}{{else if eq $alertType "cpu"}}CPU Alert - {{ if ne $realIP "" }}{{ $realIP }}{{ else }}{{ $hostInfo }}{{ end }}{{else if eq $alertType "memory"}}Memory Alert - {{ if ne $realIP "" }}{{ $realIP }}{{ else }}{{ $hostInfo }}{{ end }}{{else if eq $alertType "container"}}Container Alert - {{ $containerInfo }}{{else}}System Alert - {{ if ne $realIP "" }}{{ $realIP }}{{ else }}{{ $hostInfo }}{{ end }}{{end}}
instance: {{ $hostInfo }}
{{- if ne $realIP "" }}
real_ip: {{ $realIP }}
{{- end }}
{{- if ne $prometheusSource "unknown" }}
prometheus_source: {{ $prometheusSource }}
{{- end }}
job: {{ .Labels.job | default "unknown" }}
{{/* Informa√ß√µes extras de origem */}}
datasource_info:
  original_address: {{ .Labels.__address__ | default "not_available" }}
  scrape_instance: {{ .Labels.instance | default "not_available" }}
  prometheus_server: {{ $prometheusSource }}
{{- if .Labels.prometheus_server }}
prometheus_source: {{ .Labels.prometheus_server }}
{{- end }}
{{- if .Labels.scrape_job }}
scrape_job: {{ .Labels.scrape_job }}
{{- end }}
{{- if eq $alertType "disk" }}
device: {{ $deviceInfo }}
mountpoint: {{ $mountInfo }}
fstype: {{ .Labels.fstype | default "unknown" }}
{{- end }}
{{- if eq $alertType "container" }}
container: {{ $containerInfo }}
{{- end }}
severity: {{if eq $alertType "container"}}{{if eq .Status "firing"}}container_down{{else}}container_up{{end}}{{else}}{{if ge $metricValue 90.0}}high{{else if ge $metricValue 80.0}}medium{{else}}low{{end}}{{end}}
alert_type: {{ $alertType }}
description: {{if eq $alertType "disk"}}Disk usage is {{ printf "%.1f" $metricValue }}% on device {{ $deviceInfo }} ({{ $mountInfo }}) at server {{ $hostInfo }}. {{ if ge $metricValue 90.0 }}Critical level - immediate action required.{{ else if ge $metricValue 80.0 }}High usage detected - monitoring required.{{ else }}Disk space monitoring active.{{ end }}{{else if eq $alertType "cpu"}}CPU usage is {{ printf "%.1f" $metricValue }}% on server {{ $hostInfo }}. {{ if ge $metricValue 90.0 }}Critical processor load affecting performance.{{ else if ge $metricValue 80.0 }}High CPU load detected.{{ else }}CPU monitoring active.{{ end }}{{else if eq $alertType "memory"}}Memory usage is {{ printf "%.1f" $metricValue }}% on server {{ $hostInfo }}. {{ if ge $metricValue 90.0 }}Critical memory usage - system may become unstable.{{ else if ge $metricValue 80.0 }}High memory usage detected.{{ else }}Memory monitoring active.{{ end }}{{else if eq $alertType "container"}}Container {{ $containerInfo }} is {{ if eq .Status "firing" }}DOWN{{ else }}UP{{ end }} on server {{ $hostInfo }}. {{ if eq .Status "firing" }}Service requires immediate attention.{{ else }}Service has recovered successfully.{{ end }}{{else}}System monitoring alert on {{ $hostInfo }}. Value: {{ printf "%.1f" $metricValue }}{{ end }}
summary: {{if eq $alertType "disk"}}Disk Alert - {{ $hostInfo }} device {{ $deviceInfo }} ({{ printf "%.1f" $metricValue }}%){{else if eq $alertType "cpu"}}CPU Alert - {{ $hostInfo }} ({{ printf "%.1f" $metricValue }}%){{else if eq $alertType "memory"}}Memory Alert - {{ $hostInfo }} ({{ printf "%.1f" $metricValue }}%){{else if eq $alertType "container"}}Container {{ if eq .Status "firing" }}DOWN{{ else }}UP{{ end }} - {{ $containerInfo }} on {{ $hostInfo }}{{else}}System Alert - {{ $hostInfo }}{{end}}
metric_value: {{ $metricValue }}
{{- if .Values }}
all_values:
{{- range $k, $v := .Values }}
  {{ $k }}: {{ $v }}
{{- end }}
{{- end }}
{{- if .ValueString }}
value_string: {{ .ValueString }}
{{- end }}
startsAt: {{ .StartsAt }}
status: {{ .Status }}
{{/* Debug - Labels importantes para troubleshoot */}}
debug_labels:
{{- if .Labels.prometheus }}
  prometheus: {{ .Labels.prometheus }}
{{- end }}
{{- if .Labels.prometheus_replica }}
  prometheus_replica: {{ .Labels.prometheus_replica }}
{{- end }}
{{- if .Labels.receive }}
  prometheus_receive: {{ .Labels.receive }}
{{- end }}
{{- if .Labels.__address__ }}
  original_address: {{ .Labels.__address__ }}
{{- end }}
{{- if .Labels.__name__ }}
  metric_name: {{ .Labels.__name__ }}
{{- end }}
{{- if .Labels.grafana_folder }}
  grafana_folder: {{ .Labels.grafana_folder }}
{{- end }}
---
{{end}}{{ end }}

{{ define "discord.proxy.title" }}{{template "__discord_proxy_subject" .}}{{ end }}

{{ define "discord.proxy.text" }}
{{if gt (len .Alerts.Firing) 0}}
üî• **ALERTAS ATIVOS ({{ .Alerts.Firing | len }})**
{{template "__discord_proxy_alert_context" .Alerts.Firing}}
{{end}}

{{if gt (len .Alerts.Resolved) 0}}
‚úÖ **ALERTAS RESOLVIDOS ({{ .Alerts.Resolved | len }})**  
{{template "__discord_proxy_alert_context" .Alerts.Resolved}}
{{end}}

üìä **Alertmanager**: {{template "__discord_proxy_url" .}}
{{ end }}

{{ define "webhook.discord.default.title" }}{{template "discord.proxy.title" .}}{{ end }}

{{ define "webhook.discord.default.text" }}{{template "discord.proxy.text" .}}{{ end }}

{{ define "discord.default.message" }}
{{if gt (len .Alerts.Firing) 0}}
üö® **Alertas Disparando:**
{{range .Alerts.Firing}}
{{/* Auto-detecta tipo e formata adequadamente */}}
{{- $alertType := "system" -}}
{{- $value := 0.0 -}}
{{- if .Values -}}{{- range $k, $v := .Values -}}{{- if eq $k "A" -}}{{- $value = $v -}}{{- end -}}{{- end -}}{{- end -}}
{{- if .Labels.device -}}{{- $alertType = "disk" -}}
{{- else if (or (.Labels.container) (contains "container" (.Labels.job | lower))) -}}{{- $alertType = "container" -}}
{{- else if (contains "cpu" (.Labels.alertname | lower)) -}}{{- $alertType = "cpu" -}}
{{- else if (contains "memory" (.Labels.alertname | lower)) -}}{{- $alertType = "memory" -}}{{- end -}}

**Alert:** {{if eq $alertType "disk"}}üíø Disk Alert{{else if eq $alertType "cpu"}}üñ•Ô∏è CPU Alert{{else if eq $alertType "memory"}}üíæ Memory Alert{{else if eq $alertType "container"}}üê≥ Container Alert{{else}}üö® System Alert{{end}}
**Server:** {{ .Labels.instance | default "unknown" }}
{{- if eq $alertType "disk" }}
**Device:** {{ .Labels.device }} ({{ .Labels.mountpoint | default "/" }})
**Usage:** {{ printf "%.1f" $value }}%
{{- else if eq $alertType "container" }}
**Container:** {{ .Labels.container | default .Labels.job }}
**Status:** {{ if eq .Status "firing" }}üî¥ DOWN{{ else }}üü¢ UP{{ end }}
{{- else }}
**Usage:** {{ printf "%.1f" $value }}%
{{- end }}
**Level:** {{ if eq $alertType "container" }}{{ if eq .Status "firing" }}CRITICAL{{ else }}RECOVERED{{ end }}{{ else }}{{ if ge $value 90.0 }}üî• CRITICAL{{ else if ge $value 80.0 }}üöß HIGH{{ else }}‚ö†Ô∏è MODERATE{{ end }}{{ end }}
**Time:** {{ .StartsAt }}

{{end}}
{{end}}

{{if gt (len .Alerts.Resolved) 0}}
‚úÖ **Alertas Resolvidos:**
{{range .Alerts.Resolved}}
{{- $alertType := "system" -}}
{{- if .Labels.device -}}{{- $alertType = "disk" -}}
{{- else if (or (.Labels.container) (contains "container" (.Labels.job | lower))) -}}{{- $alertType = "container" -}}
{{- else if (contains "cpu" (.Labels.alertname | lower)) -}}{{- $alertType = "cpu" -}}
{{- else if (contains "memory" (.Labels.alertname | lower)) -}}{{- $alertType = "memory" -}}{{- end -}}

**Alert:** {{if eq $alertType "disk"}}üíø Disk{{else if eq $alertType "cpu"}}üñ•Ô∏è CPU{{else if eq $alertType "memory"}}üíæ Memory{{else if eq $alertType "container"}}üê≥ Container{{else}}üö® System{{end}} - {{ .Labels.instance }}
**Status:** ‚úÖ RESOLVED
**Time:** {{ .StartsAt }}

{{end}}
{{end}}

üîó **Alertmanager:** {{.ExternalURL}}
{{ end }}

{{ define "discord.default.title" }}{{template "__discord_proxy_subject" .}}{{ end }}