#!/bin/bash

# Script para testar o Grafana Discord Proxy
# Este script envia exemplos de alertas para testar a funcionalidade

PROXY_URL="http://localhost:5001/alert"

echo "üß™ Testando Grafana Discord Proxy com Sistema de Severidade..."
echo "URL: $PROXY_URL"
echo

# Teste 1: Alerta de Disco Original
echo "üìÄ Testando alerta de DISCO (Original)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @disco.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 2: Alerta de CPU Original
echo "üñ•Ô∏è Testando alerta de CPU (Original)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @cpu.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 3: Alerta de Mem√≥ria Original
echo "ÔøΩ Testando alerta de MEM√ìRIA (Original)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @memoria.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 4: N√≠vel CR√çTICO (90-100%)
echo "üî• Testando alerta de N√≠vel CR√çTICO (95.5%)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @test_high_level.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 5: N√≠vel ALERTA (80-89%)
echo "üöß Testando alerta de N√≠vel ALERTA (84.2%)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @test_medium_level.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 6: N√≠vel ATEN√á√ÉO (0-79%)
echo "‚ö†Ô∏è Testando alerta de N√≠vel ATEN√á√ÉO (72.3%)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @test_low_level.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 7: Container DOWN
echo "üö® Testando alerta de CONTAINER DOWN..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @test_container_down.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 8: Container UP (Resolved)
echo "‚úÖ Testando alerta de CONTAINER UP (Resolvido)..."
curl -X POST "$PROXY_URL" \
  -H "Content-Type: application/json" \
  -d @test_container_up.json \
  -w "\nStatus: %{http_code}\n"
echo

sleep 2

# Teste 9: Health Check
echo "üîç Testando Health Check..."
curl -X GET "http://localhost:5001/health" \
  -H "Content-Type: application/json" \
  -w "\nStatus: %{http_code}\n"
echo

echo "‚úÖ Testes conclu√≠dos!"
echo ""
echo "üìä Resumo dos testes realizados:"
echo "   üìÄ Disco Original (83.3%) - N√≠vel ALERTA"
echo "   üñ•Ô∏è CPU Original (48.2%) - N√≠vel ATEN√á√ÉO"  
echo "   üíæ Mem√≥ria Original (26.9%) - N√≠vel ATEN√á√ÉO"
echo "   üî• Disco Cr√≠tico (95.5%) - N√≠vel CR√çTICO"
echo "   üöß CPU Alerta (84.2%) - N√≠vel ALERTA"
echo "   ‚ö†Ô∏è Mem√≥ria Aten√ß√£o (72.3%) - N√≠vel ATEN√á√ÉO"
echo "   üö® Container DOWN - CONTAINER OFFLINE"
echo "   ‚úÖ Container UP - CONTAINER ONLINE"
echo ""
echo "Verifique seu canal do Discord para ver os alertas com diferentes:"
echo "   ‚Ä¢ Cores baseadas no n√≠vel de severidade"
echo "   ‚Ä¢ GIFs espec√≠ficos para cada combina√ß√£o"
echo "   ‚Ä¢ Emojis indicando o n√≠vel de criticidade"
echo "   ‚Ä¢ Tratamento especial para containers (UP/DOWN)"